package com.bnpparibas.atlentic.iacc.bopr.main;

import java.sql.Connection;
import java.sql.SQLException;
import java.util.Date;
import java.util.Map;

import com.bnpparibas.atlentic.common.GlobalAtlentic;
import com.bnpparibas.atlentic.common.Pe0_IACC_00_Utility;
import com.bnpparibas.atlentic.common.gen.string.utilities.StringConverter;
import com.bnpparibas.atlentic.iacc.bopr.level1.P06_IACC_01_Level1;
import com.bnpparibas.atlentic.iacc.bopr.level2.P06_IACC_01_Level2;
import com.bnpparibas.atlentic.iacc.bopr.resource.P86_IACC_01_PropertiesMgr;
import com.bnpparibas.atlentic.iacc.bopr.util.exception.P06_IACC_01_ExitApplicationException;
import com.bnpparibas.atlentic.iacc.bopr.util.exception.P06_IACC_01_ParameterException;

import lombok.CustomLog;

@CustomLog(topic = "P06_IACC_BPOR_BE")
public final class P06_IACC_01_Main {

    private final String[] args;

    private static String branch;
    private static Date eventTimestamp;
    private static Date beginDate;
    private static Date endDate;
    private static String textFileName;
    private static String action;

    public static final String BRANCH_TYPE = "BEFOR";

    private P06_IACC_01_Main(final String[] args) {
        this.args = args;
    }

    public static void main(final String... inputArgs) {
        new P06_IACC_01_Main(inputArgs).execute();
    }

    private void execute() {
        LOG.debug("BOPR interface process starting...");
        LOG.debug("Input parameters: ");
        printArguments();

        try {
            if (args.length < 1) {
                throw new P06_IACC_01_ParameterException("Wrong parameters number, should be at least equals to 1");
            }

            action = args[0];

            if (P86_IACC_01_PropertiesMgr.getLevellActionName().equals(action)) {
                handleLevel1();
            } else if (P86_IACC_01_PropertiesMgr.getLevel2ActionName().equals(action)) {
                handleLevel2();
            } else {
                throw new P06_IACC_01_ParameterException("The action \"" + action + "\" is unknown, must be equal to \""
                        + P86_IACC_01_PropertiesMgr.getLevellActionName() + "\" or \""
                        + P86_IACC_01_PropertiesMgr.getLevel2ActionName() + "\"");
            }

            if (eventTimestamp == null) {
                throw new P06_IACC_01_ParameterException("The process date format is unknown!");
            }

        } catch (final P06_IACC_01_ParameterException e) {
            LOG.error("Input parameters are not valid: ", e);
            e.printStackTrace();
            System.exit(8);
        } catch (final P06_IACC_01_ExitApplicationException e) {
            LOG.error("Application exception:", e);
            e.printStackTrace();
            System.exit(8);
        } catch (final SQLException e) {
            LOG.error("SQL exception while getting Input Date:", e);
            e.printStackTrace();
            System.exit(8);
        }

        System.exit(0);
    }

    private void printArguments() {
        for (int i = 0; i < this.args.length; i++) {
            LOG.info("Parameter({}): {}", i, this.args[i]);
        }
    }

    private void handleLevel1() throws P06_IACC_01_ParameterException, P06_IACC_01_ExitApplicationException, SQLException {
        if (args.length != 1 && args.length != 5) {
            throw new P06_IACC_01_ParameterException("Wrong parameters number for level 1 action, must be equals to 1 or 5");
        }

        if (args.length == 5) {
            setBeginDate(StringConverter.StringToDate(args[3]));
            if (beginDate == null) {
                throw new P06_IACC_01_ParameterException("The begin date format is unknown!");
            }

            setEndDate(StringConverter.StringToDate(args[4]));
            if (endDate == null) {
                throw new P06_IACC_01_ParameterException("The end date format is unknown!");
            }

            if (!beginDate.before(endDate)) {
                throw new P06_IACC_01_ParameterException("Begin date must be before end date!");
            }

            setEventTimestamp(StringConverter.StringToDate(args[2]));
        } else {
            Map<String, String> config = getDateConfigDate();
            setBeginDate(StringConverter.StringToDate(config.get("INTF_SYSTEM_BEGIN_DATE")));
            setEndDate(StringConverter.StringToDate(config.get("INTF_SYSTEM_END_DATE")));
            setEventTimestamp(StringConverter.StringToDate(config.get("INTF_EVENT_DATE")));
        }

        new P06_IACC_01_Level1().execute();
    }

    private void handleLevel2() throws P06_IACC_01_ParameterException, P06_IACC_01_ExitApplicationException, SQLException {
        if (args.length != 2 && args.length != 4) {
            throw new P06_IACC_01_ParameterException("Wrong parameters number for level 2 action, must be equals to 2 or 4");
        }

        textFileName = args.length == 4 ? args[3] : args[1];

        Map<String, String> config = getDateConfigDate();
        setEventTimestamp(StringConverter.StringToDate(config.get("INTF_EVENT_DATE")));
        setBeginDate(StringConverter.StringToDate(config.get("INTF_SYSTEM_BEGIN_DATE")));
        setEndDate(StringConverter.StringToDate(config.get("INTF_SYSTEM_END_DATE")));
        branch = BRANCH_TYPE;

        new P06_IACC_01_Level2().execute();
    }

    private static Map<String, String> getDateConfigDate() throws SQLException {
        try (Connection connection = GlobalAtlentic.getLoanIQConnection()) {
            return Pe0_IACC_00_Utility.getAtlIntfDateByBranch(BRANCH_TYPE, connection);
        }
    }

    public static Date getEventTimestamp() {
        return eventTimestamp;
    }

    public static void setEventTimestamp(Date eventTimestamp) {
        P06_IACC_01_Main.eventTimestamp = eventTimestamp;
    }

    public static Date getBeginDate() {
        return beginDate;
    }

    public static void setBeginDate(Date beginDate) {
        P06_IACC_01_Main.beginDate = beginDate;
    }

    public static Date getEndDate() {
        return endDate;
    }

    public static void setEndDate(Date endDate) {
        P06_IACC_01_Main.endDate = endDate;
    }

    public static String getTextFileName() {
        return textFileName;
    }

    public static String getBranch() {
        return branch;
    }
}
