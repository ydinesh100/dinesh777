import static org.junit.Assert.*;
import static org.mockito.Mockito.*;

import java.sql.ResultSet;
import java.sql.SQLException;

import org.junit.Before;
import org.junit.Test;

public class P06_IACC_01_Level1DBTransactionTest {

    private TestableLevel1DBTransaction dbTransaction;
    private ResultSet mockResultSet;

    @Before
    public void setUp() {
        dbTransaction = new TestableLevel1DBTransaction();
        mockResultSet = mock(ResultSet.class);
    }

    @Test
    public void testPopulateBeanObject_success() throws Exception {
        // Arrange
        when(mockResultSet.getString("ACCOUNT_ID")).thenReturn("ACC123");
        when(mockResultSet.getDouble("AMOUNT")).thenReturn(1234.56);
        when(mockResultSet.getString("CURRENCY")).thenReturn("INR");

        P06_IACC_01_Level1Bean bean = new P06_IACC_01_Level1Bean();

        // Act
        dbTransaction.callPopulateBeanObject(bean, mockResultSet);

        // Assert
        assertEquals("ACC123", bean.getAccountId());
        assertEquals(1234.56, bean.getAmount(), 0.001);
        assertEquals("INR", bean.getCurrency());
    }

    @Test(expected = SQLException.class)
    public void testPopulateBeanObject_throwsSQLException() throws Exception {
        // Arrange
        when(mockResultSet.getString("ACCOUNT_ID")).thenThrow(new SQLException("DB error"));

        P06_IACC_01_Level1Bean bean = new P06_IACC_01_Level1Bean();

        // Act
        dbTransaction.callPopulateBeanObject(bean, mockResultSet);
    }

    @Test
    public void testPopulateBeanObject_withNullFields() throws Exception {
        // Arrange
        when(mockResultSet.getString("ACCOUNT_ID")).thenReturn(null);
        when(mockResultSet.getDouble("AMOUNT")).thenReturn(0.0);
        when(mockResultSet.getString("CURRENCY")).thenReturn(null);

        P06_IACC_01_Level1Bean bean = new P06_IACC_01_Level1Bean();

        // Act
        dbTransaction.callPopulateBeanObject(bean, mockResultSet);

        // Assert
        assertNull(bean.getAccountId());
        assertEquals(0.0, bean.getAmount(), 0.001);
        assertNull(bean.getCurrency());
    }

    // Subclass to expose protected method
    private static class TestableLevel1DBTransaction extends P06_IACC_01_Level1DBTransaction {
        public void callPopulateBeanObject(Object bean, ResultSet rs) throws Exception {
            super.populateBeanObject(bean, rs);
        }
    }
}
