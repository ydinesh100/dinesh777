import org.junit.Test;
import org.junit.Before;
import org.mockito.Mockito;

import java.lang.reflect.Constructor;
import java.lang.reflect.Field;
import java.lang.reflect.Method;
import java.sql.ResultSet;

import static org.junit.Assert.*;
import static org.mockito.Mockito.*;

public class P06_IACC_01_Level1DBTransactionTest {

    private ResultSet mockResultSet;
    private Object bean;
    private Class<?> beanClass;
    private Object dbTransaction;

    @Before
    public void setUp() throws Exception {
        // Load the Level1Bean class via reflection
        beanClass = Class.forName("your.package.name.P06_IACC_01_Level1Bean"); // Replace with actual package
        Constructor<?> constructor = beanClass.getDeclaredConstructor();
        constructor.setAccessible(true);
        bean = constructor.newInstance();

        // Create a mock ResultSet
        mockResultSet = mock(ResultSet.class);
        when(mockResultSet.getString("CURRENCY")).thenReturn("USD");
        when(mockResultSet.getDouble("AMOUNT")).thenReturn(100.50);
        when(mockResultSet.getInt("ID")).thenReturn(123);

        // Create instance of P06_IACC_01_Level1DBTransaction
        dbTransaction = new P06_IACC_01_Level1DBTransaction();
    }

    @Test
    public void testPopulateBeanObject_usesReflection() throws Exception {
        // Find the method populateBeanObject
        Method populateMethod = P06_IACC_01_Level1DBTransaction.class
                .getDeclaredMethod("populateBeanObject", Object.class, ResultSet.class);
        populateMethod.setAccessible(true);

        // Invoke the method
        populateMethod.invoke(dbTransaction, bean, mockResultSet);

        // Validate populated fields using reflection
        Field currencyField = beanClass.getDeclaredField("currency");
        currencyField.setAccessible(true);
        String currency = (String) currencyField.get(bean);
        assertEquals("USD", currency);

        Field amountField = beanClass.getDeclaredField("amount");
        amountField.setAccessible(true);
        double amount = (double) amountField.get(bean);
        assertEquals(100.50, amount, 0.01);

        Field idField = beanClass.getDeclaredField("id");
        idField.setAccessible(true);
        int id = (int) idField.get(bean);
        assertEquals(123, id);
    }
}
