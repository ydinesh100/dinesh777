package com.bnpparibas.atlentic.iacc.bopr.main.test;

import com.bnpparibas.atlentic.iacc.bopr.main.P06_IACC_01_Main;
import com.bnpparibas.atlentic.iacc.bopr.util.exception.P06_IACC_01_ParameterException;

import org.junit.Before;
import org.junit.Test;

import java.lang.reflect.Method;
import java.sql.SQLException;

import static org.junit.Assert.*;

public class P06_IACC_01_MainTest {

    private Method executeMethod;

    @Before
    public void setUp() throws Exception {
        // Access private static method execute(String[] args)
        executeMethod = P06_IACC_01_Main.class.getDeclaredMethod("execute", String[].class);
        executeMethod.setAccessible(true);
    }

    private void invokeExecute(String[] args) throws Exception {
        try {
            executeMethod.invoke(null, (Object) args); // For static methods
        } catch (Exception ex) {
            Throwable cause = ex.getCause();
            if (cause instanceof Exception) throw (Exception) cause;
            else throw ex;
        }
    }

    @Test(expected = P06_IACC_01_ParameterException.class)
    public void testExecute_ThrowsParameterExceptionWhenNoArgs() throws Exception {
        String[] args = {};
        invokeExecute(args);
    }

    @Test(expected = P06_IACC_01_ParameterException.class)
    public void testExecute_InsufficientArgs_ThrowsParameterException() throws Exception {
        String[] args = new String[5]; // Less than 11
        invokeExecute(args);
    }

    @Test
    public void testExecute_InvalidAction_ThrowsParameterException() {
        String[] args = new String[] {
            "Level1", // Invalid because it's case-sensitive
            "EVENT", "20250101", "20250131",
            "B1", "GOLD", "N", "N", "Y", "N", "DEBUG"
        };

        try {
            invokeExecute(args);
            fail("Expected P06_IACC_01_ParameterException for invalid action");
        } catch (Exception e) {
            assertTrue(e instanceof P06_IACC_01_ParameterException);
            assertTrue(e.getMessage().contains("unknown"));
        }
    }

    // Optional: Add more test cases for Level1 or Level2 logic using mocks if needed.
}
