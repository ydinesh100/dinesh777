@Test
public void testGetRecordsBeansList_catchBlock_SQLException() throws Exception {
    // Simulate exception on prepareStatement
    when(mockConnection.prepareStatement(anyString())).thenThrow(new SQLException("Simulated DB error"));

    dbTransaction = new P06_IACC_01_DBTransaction(mockConnection) {
        @Override
        protected void feedingRecordBean(P06_IACC_01_BoprRecordBean bean, ResultSet rs) throws SQLException {}

        @Override
        protected void innerFeedingRecordBean(P06_IACC_01_BoprRecordBean bean, ResultSet rs) {}

        @Override
        protected String getSelectRecordsQueryKey() {
            return "dummy.query.key";
        }

        @Override
        protected void feedRecordsBeansListPreparedStatement(PreparedStatement ps) throws SQLException {}
    };

    Method method = P06_IACC_01_DBTransaction.class.getDeclaredMethod("getRecordsBeansList");
    method.setAccessible(true);

    try {
        method.invoke(dbTransaction);
        fail("Expected P06_IACC_01_SQLException");
    } catch (InvocationTargetException ex) {
        Throwable cause = ex.getCause();
        assertTrue(cause instanceof P06_IACC_01_SQLException);  // âœ… catch block covered
        assertTrue(cause.getMessage().contains("An error occurred"));
    }
}
