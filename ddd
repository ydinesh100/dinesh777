@Test
public void test_getRecordsBeansList_catchBlock_SQLException() throws Exception {
    // Simulate SQLException in prepareStatement
    when(mockConnection.prepareStatement(anyString()))
        .thenThrow(new SQLException("Simulated DB error"));

    // Access the protected method using reflection
    Method method = P06_IACC_01_DBTransaction.class.getDeclaredMethod("getRecordsBeansList");
    method.setAccessible(true);

    try {
        method.invoke(dbTransaction); // This should throw InvocationTargetException wrapping your custom exception
        fail("Expected P86_IACC_01_SQLException to be thrown");
    } catch (InvocationTargetException ex) {
        Throwable cause = ex.getCause();

        // Improved check: print full cause if test fails
        if (!(cause instanceof P86_IACC_01_SQLException)) {
            cause.printStackTrace(); // for debugging
            fail("Expected P86_IACC_01_SQLException but got: " + cause.getClass().getName());
        }

        assertTrue(cause.getMessage().contains("An error occurred while getting records"));
    }
}
