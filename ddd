package com.bnpparibas.atlentic.iacc.bopr.main.test;

import org.junit.jupiter.api.*;

import java.lang.reflect.Method;
import java.security.Permission;

import static org.junit.jupiter.api.Assertions.*;

class P06_IACC_01_Main_MainMethodTest {

    private static final String MAIN_CLASS = "com.bnpparibas.atlentic.iacc.bopr.main.P06_IACC_01_Main";
    private SecurityManager originalSecurityManager;

    @BeforeEach
    void interceptSystemExit() {
        originalSecurityManager = System.getSecurityManager();
        System.setSecurityManager(new NoExitSecurityManager());
    }

    @AfterEach
    void restoreSystemExit() {
        System.setSecurityManager(originalSecurityManager);
    }

    @Test
    void testMainWithInvalidArgsShouldExit() throws Exception {
        String[] invalidArgs = {"level1", "BE01", "invalid-date-format"};

        Class<?> mainClass = Class.forName(MAIN_CLASS);
        Method mainMethod = mainClass.getDeclaredMethod("main", String[].class);

        ExitStatus exitStatus = assertThrows(ExitStatus.class, () -> {
            try {
                mainMethod.invoke(null, (Object) invalidArgs);
            } catch (Exception ignored) {
                // Expected due to System.exit
            }
        });

        assertEquals(8, exitStatus.getStatusCode(), "Expected System.exit(8) for invalid input");
    }

    // ===== Security Manager to Catch System.exit =====

    static class NoExitSecurityManager extends SecurityManager {
        @Override
        public void checkPermission(Permission perm) {
            // Allow everything
        }

        @Override
        public void checkExit(int status) {
            super.checkExit(status);
            throw new ExitStatus(status);
        }
    }

    // ===== Throwable for Capturing Exit =====

    static class ExitStatus extends SecurityException {
        private final int statusCode;

        ExitStatus(int statusCode) {
            super("Intercepted System.exit(" + statusCode + ")");
            this.statusCode = statusCode;
        }

        public int getStatusCode() {
            return statusCode;
        }
    }
}
