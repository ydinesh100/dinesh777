import static org.mockito.Mockito.*;
import static org.junit.Assert.*;

import java.text.DecimalFormat;

import org.junit.Before;
import org.junit.Test;

public class RecordAppenderTest {

    private RecordAppender recordAppender;
    private F06_IACC_01_BoprRecordBean recordBean;

    @Before
    public void setUp() {
        recordAppender = spy(new RecordAppender());
        recordAppender.decimalFormat = new DecimalFormat("#0.00");
        recordAppender.g_d_sumAmountsOriginalCurrency = 0.0;
        recordAppender.g_d_sumAmountsBranchCurrency = 0.0;
        recordAppender.transactionsNumber = 0;

        recordBean = mock(F06_IACC_01_BoprRecordBean.class);
        when(recordBean.getSenderServiceCode()).thenReturn("ABCDEF");
        when(recordBean.getOperationReference()).thenReturn("OPREF1234567890123456789012");
        when(recordBean.getCountryCode()).thenReturn("FR");
        when(recordBean.getEffectiveDate()).thenReturn("20250530");
        when(recordBean.getAmountCurrency()).thenReturn("EUR");
        when(recordBean.getCashflowDirection()).thenReturn("FROM");
        when(recordBean.getAmount()).thenReturn(1000.50);
        when(recordBean.getAmountInBranchCurrency()).thenReturn(2000.75);
    }

    @Test
    public void testAppendRecord_WithValidData() {
        recordAppender.appendRecord(recordBean, "USD");

        verify(recordAppender).append("1", 1);
        verify(recordAppender).append("ABCDEF", 6);
        verify(recordAppender).append("OPREF1234567890123456789012", 28);
        verify(recordAppender).append("FR", 2);
        verify(recordAppender).append("EUR", 3);
        verify(recordAppender).append("1", 1); // because FROM
        verify(recordAppender).append(1000.50);
        verify(recordAppender).append("USD", 3);
        verify(recordAppender).append(2000.75);
        verify(recordAppender).append("", 40);

        assertEquals(1, recordAppender.transactionsNumber);
        assertEquals(1000.50, recordAppender.g_d_sumAmountsOriginalCurrency, 0.01);
        assertEquals(2000.75, recordAppender.g_d_sumAmountsBranchCurrency, 0.01);
    }

    @Test
    public void testAppendRecord_WithNullAmountInBranchCurrency() {
        when(recordBean.getAmountInBranchCurrency()).thenReturn(null);

        recordAppender.appendRecord(recordBean, "USD");

        verify(recordAppender).append("", 18);
        assertEquals(0.0, recordAppender.g_d_sumAmountsBranchCurrency, 0.01);
    }
}
